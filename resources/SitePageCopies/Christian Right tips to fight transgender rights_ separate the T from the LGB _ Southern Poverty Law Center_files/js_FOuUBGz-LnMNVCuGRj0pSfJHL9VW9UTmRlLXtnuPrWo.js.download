/**
* jquery.matchHeight-min.js master
* http://brm.io/jquery-match-height/
* License: MIT
*/
(function(c){var n=-1,f=-1,g=function(a){return parseFloat(a)||0},r=function(a){var b=null,d=[];c(a).each(function(){var a=c(this),k=a.offset().top-g(a.css("margin-top")),l=0<d.length?d[d.length-1]:null;null===l?d.push(a):1>=Math.floor(Math.abs(b-k))?d[d.length-1]=l.add(a):d.push(a);b=k});return d},p=function(a){var b={byRow:!0,property:"height",target:null,remove:!1};if("object"===typeof a)return c.extend(b,a);"boolean"===typeof a?b.byRow=a:"remove"===a&&(b.remove=!0);return b},b=c.fn.matchHeight=
function(a){a=p(a);if(a.remove){var e=this;this.css(a.property,"");c.each(b._groups,function(a,b){b.elements=b.elements.not(e)});return this}if(1>=this.length&&!a.target)return this;b._groups.push({elements:this,options:a});b._apply(this,a);return this};b._groups=[];b._throttle=80;b._maintainScroll=!1;b._beforeUpdate=null;b._afterUpdate=null;b._apply=function(a,e){var d=p(e),h=c(a),k=[h],l=c(window).scrollTop(),f=c("html").outerHeight(!0),m=h.parents().filter(":hidden");m.each(function(){var a=c(this);
a.data("style-cache",a.attr("style"))});m.css("display","block");d.byRow&&!d.target&&(h.each(function(){var a=c(this),b=a.css("display");"inline-block"!==b&&"inline-flex"!==b&&(b="block");a.data("style-cache",a.attr("style"));a.css({display:b,"padding-top":"0","padding-bottom":"0","margin-top":"0","margin-bottom":"0","border-top-width":"0","border-bottom-width":"0",height:"100px"})}),k=r(h),h.each(function(){var a=c(this);a.attr("style",a.data("style-cache")||"")}));c.each(k,function(a,b){var e=c(b),
f=0;if(d.target)f=d.target.outerHeight(!1);else{if(d.byRow&&1>=e.length){e.css(d.property,"");return}e.each(function(){var a=c(this),b=a.css("display");"inline-block"!==b&&"inline-flex"!==b&&(b="block");b={display:b};b[d.property]="";a.css(b);a.outerHeight(!1)>f&&(f=a.outerHeight(!1));a.css("display","")})}e.each(function(){var a=c(this),b=0;d.target&&a.is(d.target)||("border-box"!==a.css("box-sizing")&&(b+=g(a.css("border-top-width"))+g(a.css("border-bottom-width")),b+=g(a.css("padding-top"))+g(a.css("padding-bottom"))),
a.css(d.property,f-b+"px"))})});m.each(function(){var a=c(this);a.attr("style",a.data("style-cache")||null)});b._maintainScroll&&c(window).scrollTop(l/f*c("html").outerHeight(!0));return this};b._applyDataApi=function(){var a={};c("[data-match-height], [data-mh]").each(function(){var b=c(this),d=b.attr("data-mh")||b.attr("data-match-height");a[d]=d in a?a[d].add(b):b});c.each(a,function(){this.matchHeight(!0)})};var q=function(a){b._beforeUpdate&&b._beforeUpdate(a,b._groups);c.each(b._groups,function(){b._apply(this.elements,
this.options)});b._afterUpdate&&b._afterUpdate(a,b._groups)};b._update=function(a,e){if(e&&"resize"===e.type){var d=c(window).width();if(d===n)return;n=d}a?-1===f&&(f=setTimeout(function(){q(e);f=-1},b._throttle)):q(e)};c(b._applyDataApi);c(window).bind("load",function(a){b._update(!1,a)});c(window).bind("resize orientationchange",function(a){b._update(!0,a)})})(jQuery);
;
/*!
Waypoints - 4.0.0
Copyright Â© 2011-2015 Caleb Troughton
Licensed under the MIT license.
https://github.com/imakewebthings/waypoints/blog/master/licenses.txt
*/
!function(){"use strict";function t(n){if(!n)throw new Error("No options passed to Waypoint constructor");if(!n.element)throw new Error("No element option passed to Waypoint constructor");if(!n.handler)throw new Error("No handler option passed to Waypoint constructor");this.key="waypoint-"+e,this.options=t.Adapter.extend({},t.defaults,n),this.element=this.options.element,this.adapter=new t.Adapter(this.element),this.callback=n.handler,this.axis=this.options.horizontal?"horizontal":"vertical",this.enabled=this.options.enabled,this.triggerPoint=null,this.group=t.Group.findOrCreate({name:this.options.group,axis:this.axis}),this.context=t.Context.findOrCreateByElement(this.options.context),t.offsetAliases[this.options.offset]&&(this.options.offset=t.offsetAliases[this.options.offset]),this.group.add(this),this.context.add(this),i[this.key]=this,e+=1}var e=0,i={};t.prototype.queueTrigger=function(t){this.group.queueTrigger(this,t)},t.prototype.trigger=function(t){this.enabled&&this.callback&&this.callback.apply(this,t)},t.prototype.destroy=function(){this.context.remove(this),this.group.remove(this),delete i[this.key]},t.prototype.disable=function(){return this.enabled=!1,this},t.prototype.enable=function(){return this.context.refresh(),this.enabled=!0,this},t.prototype.next=function(){return this.group.next(this)},t.prototype.previous=function(){return this.group.previous(this)},t.invokeAll=function(t){var e=[];for(var n in i)e.push(i[n]);for(var o=0,r=e.length;r>o;o++)e[o][t]()},t.destroyAll=function(){t.invokeAll("destroy")},t.disableAll=function(){t.invokeAll("disable")},t.enableAll=function(){t.invokeAll("enable")},t.refreshAll=function(){t.Context.refreshAll()},t.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight},t.viewportWidth=function(){return document.documentElement.clientWidth},t.adapters=[],t.defaults={context:window,continuous:!0,enabled:!0,group:"default",horizontal:!1,offset:0},t.offsetAliases={"bottom-in-view":function(){return this.context.innerHeight()-this.adapter.outerHeight()},"right-in-view":function(){return this.context.innerWidth()-this.adapter.outerWidth()}},window.Waypoint=t}(),function(){"use strict";function t(t){window.setTimeout(t,1e3/60)}function e(t){this.element=t,this.Adapter=o.Adapter,this.adapter=new this.Adapter(t),this.key="waypoint-context-"+i,this.didScroll=!1,this.didResize=!1,this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()},this.waypoints={vertical:{},horizontal:{}},t.waypointContextKey=this.key,n[t.waypointContextKey]=this,i+=1,this.createThrottledScrollHandler(),this.createThrottledResizeHandler()}var i=0,n={},o=window.Waypoint,r=window.onload;e.prototype.add=function(t){var e=t.options.horizontal?"horizontal":"vertical";this.waypoints[e][t.key]=t,this.refresh()},e.prototype.checkEmpty=function(){var t=this.Adapter.isEmptyObject(this.waypoints.horizontal),e=this.Adapter.isEmptyObject(this.waypoints.vertical);t&&e&&(this.adapter.off(".waypoints"),delete n[this.key])},e.prototype.createThrottledResizeHandler=function(){function t(){e.handleResize(),e.didResize=!1}var e=this;this.adapter.on("resize.waypoints",function(){e.didResize||(e.didResize=!0,o.requestAnimationFrame(t))})},e.prototype.createThrottledScrollHandler=function(){function t(){e.handleScroll(),e.didScroll=!1}var e=this;this.adapter.on("scroll.waypoints",function(){(!e.didScroll||o.isTouch)&&(e.didScroll=!0,o.requestAnimationFrame(t))})},e.prototype.handleResize=function(){o.Context.refreshAll()},e.prototype.handleScroll=function(){var t={},e={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:"right",backward:"left"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:"down",backward:"up"}};for(var i in e){var n=e[i],o=n.newScroll>n.oldScroll,r=o?n.forward:n.backward;for(var s in this.waypoints[i]){var l=this.waypoints[i][s],a=n.oldScroll<l.triggerPoint,h=n.newScroll>=l.triggerPoint,p=a&&h,u=!a&&!h;(p||u)&&(l.queueTrigger(r),t[l.group.id]=l.group)}}for(var c in t)t[c].flushTriggers();this.oldScroll={x:e.horizontal.newScroll,y:e.vertical.newScroll}},e.prototype.innerHeight=function(){return this.element==this.element.window?o.viewportHeight():this.adapter.innerHeight()},e.prototype.remove=function(t){delete this.waypoints[t.axis][t.key],this.checkEmpty()},e.prototype.innerWidth=function(){return this.element==this.element.window?o.viewportWidth():this.adapter.innerWidth()},e.prototype.destroy=function(){var t=[];for(var e in this.waypoints)for(var i in this.waypoints[e])t.push(this.waypoints[e][i]);for(var n=0,o=t.length;o>n;n++)t[n].destroy()},e.prototype.refresh=function(){var t,e=this.element==this.element.window,i=e?void 0:this.adapter.offset(),n={};this.handleScroll(),t={horizontal:{contextOffset:e?0:i.left,contextScroll:e?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:"right",backward:"left",offsetProp:"left"},vertical:{contextOffset:e?0:i.top,contextScroll:e?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:"down",backward:"up",offsetProp:"top"}};for(var r in t){var s=t[r];for(var l in this.waypoints[r]){var a,h,p,u,c,f=this.waypoints[r][l],d=f.options.offset,y=f.triggerPoint,g=0,w=null==y;f.element!==f.element.window&&(g=f.adapter.offset()[s.offsetProp]),"function"==typeof d?d=d.apply(f):"string"==typeof d&&(d=parseFloat(d),f.options.offset.indexOf("%")>-1&&(d=Math.ceil(s.contextDimension*d/100))),a=s.contextScroll-s.contextOffset,f.triggerPoint=g+a-d,h=y<s.oldScroll,p=f.triggerPoint>=s.oldScroll,u=h&&p,c=!h&&!p,!w&&u?(f.queueTrigger(s.backward),n[f.group.id]=f.group):!w&&c?(f.queueTrigger(s.forward),n[f.group.id]=f.group):w&&s.oldScroll>=f.triggerPoint&&(f.queueTrigger(s.forward),n[f.group.id]=f.group)}}return o.requestAnimationFrame(function(){for(var t in n)n[t].flushTriggers()}),this},e.findOrCreateByElement=function(t){return e.findByElement(t)||new e(t)},e.refreshAll=function(){for(var t in n)n[t].refresh()},e.findByElement=function(t){return n[t.waypointContextKey]},window.onload=function(){r&&r(),e.refreshAll()},o.requestAnimationFrame=function(e){var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||t;i.call(window,e)},o.Context=e}(),function(){"use strict";function t(t,e){return t.triggerPoint-e.triggerPoint}function e(t,e){return e.triggerPoint-t.triggerPoint}function i(t){this.name=t.name,this.axis=t.axis,this.id=this.name+"-"+this.axis,this.waypoints=[],this.clearTriggerQueues(),n[this.axis][this.name]=this}var n={vertical:{},horizontal:{}},o=window.Waypoint;i.prototype.add=function(t){this.waypoints.push(t)},i.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}},i.prototype.flushTriggers=function(){for(var i in this.triggerQueues){var n=this.triggerQueues[i],o="up"===i||"left"===i;n.sort(o?e:t);for(var r=0,s=n.length;s>r;r+=1){var l=n[r];(l.options.continuous||r===n.length-1)&&l.trigger([i])}}this.clearTriggerQueues()},i.prototype.next=function(e){this.waypoints.sort(t);var i=o.Adapter.inArray(e,this.waypoints),n=i===this.waypoints.length-1;return n?null:this.waypoints[i+1]},i.prototype.previous=function(e){this.waypoints.sort(t);var i=o.Adapter.inArray(e,this.waypoints);return i?this.waypoints[i-1]:null},i.prototype.queueTrigger=function(t,e){this.triggerQueues[e].push(t)},i.prototype.remove=function(t){var e=o.Adapter.inArray(t,this.waypoints);e>-1&&this.waypoints.splice(e,1)},i.prototype.first=function(){return this.waypoints[0]},i.prototype.last=function(){return this.waypoints[this.waypoints.length-1]},i.findOrCreate=function(t){return n[t.axis][t.name]||new i(t)},o.Group=i}(),function(){"use strict";function t(t){return t===t.window}function e(e){return t(e)?e:e.defaultView}function i(t){this.element=t,this.handlers={}}var n=window.Waypoint;i.prototype.innerHeight=function(){var e=t(this.element);return e?this.element.innerHeight:this.element.clientHeight},i.prototype.innerWidth=function(){var e=t(this.element);return e?this.element.innerWidth:this.element.clientWidth},i.prototype.off=function(t,e){function i(t,e,i){for(var n=0,o=e.length-1;o>n;n++){var r=e[n];i&&i!==r||t.removeEventListener(r)}}var n=t.split("."),o=n[0],r=n[1],s=this.element;if(r&&this.handlers[r]&&o)i(s,this.handlers[r][o],e),this.handlers[r][o]=[];else if(o)for(var l in this.handlers)i(s,this.handlers[l][o]||[],e),this.handlers[l][o]=[];else if(r&&this.handlers[r]){for(var a in this.handlers[r])i(s,this.handlers[r][a],e);this.handlers[r]={}}},i.prototype.offset=function(){if(!this.element.ownerDocument)return null;var t=this.element.ownerDocument.documentElement,i=e(this.element.ownerDocument),n={top:0,left:0};return this.element.getBoundingClientRect&&(n=this.element.getBoundingClientRect()),{top:n.top+i.pageYOffset-t.clientTop,left:n.left+i.pageXOffset-t.clientLeft}},i.prototype.on=function(t,e){var i=t.split("."),n=i[0],o=i[1]||"__default",r=this.handlers[o]=this.handlers[o]||{},s=r[n]=r[n]||[];s.push(e),this.element.addEventListener(n,e)},i.prototype.outerHeight=function(e){var i,n=this.innerHeight();return e&&!t(this.element)&&(i=window.getComputedStyle(this.element),n+=parseInt(i.marginTop,10),n+=parseInt(i.marginBottom,10)),n},i.prototype.outerWidth=function(e){var i,n=this.innerWidth();return e&&!t(this.element)&&(i=window.getComputedStyle(this.element),n+=parseInt(i.marginLeft,10),n+=parseInt(i.marginRight,10)),n},i.prototype.scrollLeft=function(){var t=e(this.element);return t?t.pageXOffset:this.element.scrollLeft},i.prototype.scrollTop=function(){var t=e(this.element);return t?t.pageYOffset:this.element.scrollTop},i.extend=function(){function t(t,e){if("object"==typeof t&&"object"==typeof e)for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t}for(var e=Array.prototype.slice.call(arguments),i=1,n=e.length;n>i;i++)t(e[0],e[i]);return e[0]},i.inArray=function(t,e,i){return null==e?-1:e.indexOf(t,i)},i.isEmptyObject=function(t){for(var e in t)return!1;return!0},n.adapters.push({name:"noframework",Adapter:i}),n.Adapter=i}();
;
/*! outline.js v1.2.0 - https://github.com/lindsayevans/outline.js/ */
(function(d){

	var style_element = d.createElement('STYLE'),
	    dom_events = 'addEventListener' in d,
	    add_event_listener = function(type, callback){
			// Basic cross-browser event handling
			if(dom_events){
				d.addEventListener(type, callback);
			}else{
				d.attachEvent('on' + type, callback);
			}
		},
	    set_css = function(css_text){
			// Handle setting of <style> element contents in IE8
			!!style_element.styleSheet ? style_element.styleSheet.cssText = css_text : style_element.innerHTML = css_text;
		}
	;

	d.getElementsByTagName('HEAD')[0].appendChild(style_element);

	// Using mousedown instead of mouseover, so that previously focused elements don't lose focus ring on mouse move
	add_event_listener('mousedown', function(){
		set_css(':focus{outline:0}::-moz-focus-inner{border:0;}');
	});

	add_event_listener('keydown', function(){
		set_css('');
	});

})(document);
;
/**
 * @file
 * A JavaScript file for the theme.
 *
 * In order for this JavaScript to be loaded on pages, see the instructions in
 * the README.txt next to this file.
 */

// JavaScript should be made compatible with libraries other than jQuery by
// wrapping it with an "anonymous closure". See:
// - https://drupal.org/node/1446420
// - http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth
(function ($, Drupal, window, document, undefined) {

  // To understand behaviors, see https://drupal.org/node/756722#behaviors
  Drupal.behaviors.basic = {
    attach: function(context, settings) {

      if (context == document) {

        var _splc = {
          setSearch: function() {
            var $search = $('.search-toggle-on-scroll');
            $search.attr('aria-label', $search.text()).text('');
          },

          searchSite: function() {
            var searchInput = $('li.search input[type=text] ');
            searchInput.live('keypress', function(e) {
              if (e.keyCode == 13)  {
                var searchTerm = $('li.search input[type=text]').val();
                var searchPage = Drupal.settings.basePath + 'resources?keyword=' + searchTerm;
                window.location = searchPage;
              }
            });
          },

          hasBackgroundImage: function(elem) {
            if (elem.css('background-image') == 'none') {
              return false;
            } else {
              return true;
            }
          },

          followStoryLink: function() {
            $('.front [class*="featured-banner-item-"]')
              .click(function() {
                var link = $(this).find('.field-name-field-link a').attr('href');
                window.location = link;
              });
          },

          setBreadcrumbToggle: function() {
            $('#main-navigation #block-menu_block-3 h2.block-title a').append(
              '<span class="breadcrumb-toggle">More</span>'
            );
          },

          toggleBreadcrumb: function() {
            $('.breadcrumb-toggle').click(function(e) {
              e.preventDefault();
              $(this).toggleClass('open');
              if ($(this).text() == 'More') {
                $(this).text('Close');
              } else {
                $(this).text('More');
              }
              $('#main-navigation #block-menu_block-3 ul.menu').slideToggle();
            });
          },

          toggleSearch: function() {
            $('.search-toggle-on-scroll, .search-toggle, #site-search .close-button').click(function(e) {
              e.preventDefault();
              var siteSearch = $('#site-search');
              $('.search-toggle').toggleClass('open');
              siteSearch.fadeToggle('fast');
              $('#header').toggleClass('search-active');
              $('#site-search input').focus();
            });
          },

          toggleNav: function() {
            $('.nav-toggle').click(function() {
              $(this).toggleClass('open');
              $('#header').toggleClass('open');
              $('#main-navigation, #secondary-nav').slideToggle(200);
            });

            $('#main-navigation #block-menu_block-1 li.expanded button').on("click", function(event) {
              $(this).parent('li.expanded').find('ul.menu').slideToggle();
            });
          },

          accessibleNav: function() {
            var axsMenuItem = $('.menu-name-main-menu li.expanded');
            $('.menu-name-main-menu li.expanded button').attr('aria-expanded','false');

            axsMenuItem.each(function() {
              var activatingA = $(this).children('a');
              var btn = '<button><span class="arrow"><span class="visually-hidden">show submenu for “' + activatingA.text() + '”</span></span></button>';
              activatingA.after(btn);

              $(this).find('button').on('click', function(event){
                event.preventDefault();
                var li = $(this).parents('li.expanded').toggleClass('open');
                $(this).attr('aria-expanded', li.hasClass('open') ? 'true' : 'false');
              });
            });

            $('.menu-block-wrapper > ul.menu > li > a').on('focus', function(){
              axsMenuItem.removeClass('open').find('button').attr('aria-expanded', 'false');
            });
          },

          wrapFooterContact: function() {
            // Wraps footer contact and social links
            if($('#footer .contact-wrapper').length < 1) {
              $('#footer .container').prepend('<div class="contact-wrapper"></div>');

              var contactInfo = $('#block-menu_block-4, #block-splc_common-splc_footer_info, #block-splc_common-splc_address, #block-bean-footer---civil-rights-memorial-c');
              $('.contact-wrapper').append(contactInfo);

              // Append logo to footer social links
              $('.menu-name-menu-social ul.menu').prepend(
                '<li><a href="'+Drupal.settings.basePath+'"><img src="'+ Drupal.settings.basePath +'profiles/splc/themes/custom/splc/images/logo-white-stacked_2x.png" alt="SPLC Logo"/></a></li>'
              );
            }

          },

          setIssueChildBlocks: function() {
            $('.group-addthis-body-wrapper').append($('#block-splc_page-landing-child-listing'));
          },

          resetStyle: function() {
            $(window).resize(function() {
              $('#main-navigation #block-menu_block-3 ul.menu').removeAttr('style');
            });
          },

          /**
           * JS overrides and onload behaviors to make pages more accessible to keyboard users and screen readers.
           */
          accessibility: function() {
            if ($('#banner').text().trim()) {
              // Set skip-to-content link to the banner only if it has content.
              $('#skip-to-content').attr('href', '#banner');
            }
          },

          /**
           * @see https://stackoverflow.com/a/49924510/1456495
           */
          handleTouch: function() {
            var keep_ms = 1000; // how long to keep the touchevents
            var threshold = 16; // how many pixels range for touchevents to be considered identical
            var touchpoints = [];

            function registerTouch(e) {
              var touch = e.touches[0] || e.changedTouches[0];
              var point = {x: touch.pageX, y: touch.pageY};
              touchpoints.push(point);
              setTimeout(function (){
                // remove touchpoint from list after keep_ms
                touchpoints.splice(touchpoints.indexOf(point), 1);
              }, keep_ms);
            }

            function handleMouseEvent(e) {
              for(var i in touchpoints) {
                //check if mouseevent's position is within any previously registered touch events' threshold
                if(Math.abs(touchpoints[i].x - e.pageX) < threshold && Math.abs(touchpoints[i].y - e.pageY) < threshold) {
                  //set flag on event
                  e.triggeredByTouch = true;
                  return;
                }
              }
            }

            document.addEventListener('touchstart', registerTouch, true);
            document.addEventListener('touchend', registerTouch, true);
            document.addEventListener('mouseover', handleMouseEvent, true);
          },

          equalizeHeight: function(element) {
            element.matchHeight({
              byRow: true
            });
          },

          toggleEditorTabs: function() {
            $('div.tabs').append('<span class="toggle-tabs"></span>');
            $('.toggle-tabs').click(function() {
              $(this).toggleClass('closed');
            }).toggle(function(){
              $('div.tabs').animate({ "left": "-95%" }, 100);
            }, function() {
              $('div.tabs').removeAttr('style');
            });
          },

          dismissSystemMessage: function() {
            $('#system-messages').append('<span class="close-message"></span>');
            $('.close-message').click(function() {
              $(this).parent().fadeOut();
            })
          },

          searchReset: function() {
            $('.search-reset').click(function() {
              window.location.replace(window.location.href.split("?")[0]);
            })
          },

          // Helps reuse group header sass
          addGroupHeader: function() {
            $(
              '.not-front #banner > .title, ' +
              '.not-front #banner #banner-content .view-page-banner, ' +
              '.not-front #banner > .contextual-links-wrapper '
            ).wrapAll('<header class="group-header"></header>');
          },

          // Move listing page titles into the group-text-wrapper div, so it can
          // inherit the sass.
          moveListingTitles: function() {
            $('.not-front #banner .group-text-wrapper').prepend('<div class="field-name-title-field"></div>');
            $('.not-front #banner .group-header .title').appendTo('.not-front #banner .group-text-wrapper .field-name-title-field').addClass('page-title');
          },

          animateProgressBarFill: function() {
            $('.progress-fill').animate({
              width: $('.progress-fill').data('percentage') + '%'
            }, 3000);
          },

          appendCampaignFormToBody: function() {
            $('.node-type-story .field-name-body').prepend($('.node-story .field-group-campaign'));
          },

          wrapStandStrongFields: function() {
            $('.entitytype-stand_strong-form .form-wrapper').wrapAll('<div class="stand-strong-form-fields"></div>');
          },

          wrapBylineFields: function() {
            $('.node-intelligence-report-issue .group-text-fields').append($('.field-name-field-publish-date'));
          },

          fixFilterWidth: function() {
            $('.facetapi-select').css({'width':'245px'});
          },

          hatemapRangeSlider: function() {
            var rangeSlider = $('.hatemap-range-slider input[type="range"]');

            // Set number of ticks on range slider marker
            var numberOfTicks = $('#hate-map-year option').length;
            var sliderMarkers = $('.hatemap-range-slider .markers');
            for (i=0; i<numberOfTicks; i++) {
              sliderMarkers.append('<div class="tick"></div>');
            }

            // Set range slider min and max values
            var rangeArray = [];
            $('#hate-map-year option').each(function() {
              rangeArray.push($(this).text());
            });
            var minVal = rangeArray[0];
            var maxVal = rangeArray[rangeArray.length - 1];
            rangeSlider.attr('min', minVal);
            rangeSlider.attr('max', maxVal);

            // Set initial value
            rangeSlider.val($('#hate-map-year').val() || maxVal);

            var sliderLegend = $('.slider-legend');
            sliderLegend.find('.min').text(minVal);
            sliderLegend.find('.max').text(maxVal);

            // Update the hidden select value when the range slider is changed
            rangeSlider.on('change click', function() {
              var updatedYear = rangeSlider.val();
              $('#hate-map-year').val(updatedYear).trigger('change');
            });
          },

           // Toggle tooltiop on and off classes
           toolTipOnOff: function() {
            $('.section-hate-map .tooltip').on('click keypress', function(event) {
              if (event.type === 'click' || event.which === 13) {
                $(this).toggleClass('on off');
              }
            });
          },

          donateTicker: function() {
            var ticker = $('.donate-ticker');
            ticker.find('.close-button').click(function() {
              ticker.fadeOut();
            });

          },

          init: function() {
            this.setSearch();
            this.wrapFooterContact();
            this.searchSite();
            this.toggleNav();
            this.toggleSearch();
            this.followStoryLink();
            this.setBreadcrumbToggle();
            this.toggleBreadcrumb();
            this.setIssueChildBlocks();
            this.toggleEditorTabs();
            this.fixFilterWidth();

            this.resetStyle();
            this.accessibility();
            this.handleTouch();

            // Set equal height on incidents
            this.equalizeHeight($('.page-fighting-hate-hate-incidents .views-row'));
            // Set equal height on related and recent news
            this.equalizeHeight($('.view-display-id-eva_stories_by_ideology article'));
            this.equalizeHeight($('.view-display-id-eva_stories_by_extremist_profile article'));
            this.equalizeHeight($('[id*="block-bean-priority"]'));
            this.equalizeHeight($('#content-bottom-3 [id*="block-bean-"].block'));
            this.dismissSystemMessage();
            this.searchReset();
            this.addGroupHeader();
            this.moveListingTitles();
            this.animateProgressBarFill();
            this.appendCampaignFormToBody();
            this.wrapStandStrongFields();
            this.wrapBylineFields();
            this.hatemapRangeSlider();
            this.toolTipOnOff();
            this.accessibleNav();
            this.donateTicker();

            // Add class if page has a banner image
            if (this.hasBackgroundImage($('.group-header'))) {
              $('body').addClass('has-background-image');
            }

            // Set donate and ways to give links on mobile
            var waysToGiveLink = $('#block-menu_block-2 .ways-to-give a').attr('href');
            var donateLink = $('#block-menu_block-2 .donate a').attr('href');
            $('.mobile-giving a.donate').attr('href', donateLink);
            $('.mobile-giving a.ways-to-give').attr('href', waysToGiveLink);

            // Make search bar initially active on hatemap
            $('.leaflet-bar').addClass('active');

            // Remove has background image on hatewatch if featured story
            if ($('#block-splc_story-hatewatch_featured_story').length > 0) {
              $('body.page-hatewatch').removeClass('has-background-image');
              $('.page-hatewatch .group-header').css({ 'background-image': 'none'});
            }
          }
        };

        _splc.init();


        var headerHeight = $('#header').outerHeight();
        var secondaryNavHeight = $('#secondary-nav').outerHeight();
        var bodyTop = $(document.body).hasClass('navbar-fixed') ? $('.navbar-bar').height() : 0;

        var waypoint = new Waypoint({
          element: $('body')[0],
          handler: function(direction) {
            var breakpoint = getBreakpoint();
            if (breakpoint == 'd' || breakpoint == 'l') {
              var top = bodyTop;

              if (direction == 'down') {
                if ($('#header').hasClass('search-active')) {
                  top += $('#site-search').height();
                }
                top += headerHeight;

                $('#header #logo').removeClass('animated flipInY');
                $(document.body).addClass('sticky-header');
                $(document.body).css({'padding-top': top + 'px'});
                $('#header #logo').addClass('animated flipInY');
              }
              else if (direction == 'up') {
                $('#header #logo').removeClass('animated flipInY');
                $(document.body).removeClass('sticky-header');
                $(document.body).css({'padding-top': top + 'px'});
                //$('#header #logo').addClass('animated flipInY');
              }
            }
          },
          offset: -(bodyTop + secondaryNavHeight)
        });

      }
    }
  };

  /**
   * Get the current breakpoint defined in css.
   * @see global.scss
   */
  window.getBreakpoint = function() {
    if (window.getComputedStyle && document.querySelector) {
      return window.getComputedStyle(document.querySelector('body'), ':before').getPropertyValue('content').replace(/"/g, '');
    }
    return '';
  };

  /**
   * Object that handles opening and closing splc popups.
   */
  window.splcPopup = {
    /**
     * Open a popup anchored to a position on the page.
     *
     * @param content Popup content as html, or as a promise.
     * @param options Object properties:
     *   - x: Coordinate in pixels where the popup should be placed.
     *   - y: Coordinate in pixels where the popup should be placed.
     *   - closeCallback: function called when the popup is closed.
     */
    open: function(content, options) {
      options = $.extend({
        x: 0,
        y: 0,
        closeCallback: function() {}
      }, options);

      // Close any open popup.
      splcPopup.close();

      var $popup = $('<div class="splc-popup"><span class="popup-close-button" role="button" tabindex="0">close</span><div class="popup-content"></div></div>');

      var x = options.x;
      var y = options.y - 120;
      if (options.x > $(document.body).width() / 2) {
        $popup.addClass('left-side');
        x += -276;
      }
      else {
        x += 16;
      }

      $popup.appendTo(document.body)
        .css({
          left: x + 'px',
          top: y + 'px'
        })
        .on('click', '.popup-close-button', function(event) {
          options.closeCallback();
          $popup.remove();
        });

      if (content.then) {
        return content.then(function(html) {
          $popup.find('.popup-content').html(html);
        })
      }
      else {
        $popup.find('.popup-content').html(content);
      }
    },

    /**
     * Close the popup that is currently open.
     */
    close: function() {
      $('.splc-popup .popup-close-button').click();
    }
  };

})(jQuery, Drupal, this, this.document);
;
