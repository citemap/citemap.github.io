/*!
     *  !!
     *  THIS IS REUSABLE
     *  !!
     */
    function init_interactive_populations() {
       
        /*!
         *  Get the Charts
         */
        var interactiveCharts = jQuery('div.interactive_population');

        /*!
         *  Charts are open by default
         */
        interactiveCharts.data('isOpen', false);

        /*!
         *  Store their heights in $.data
         */
        interactiveCharts.each(function(index, val) {
            var $this = jQuery(this);
            $this.data('closedHeight', $this.outerHeight());
            
            /*!
             *  since we're not on HTML5 and don't have access to data-attributes 
             *  we did something kind of weird and store it as the ID.. 
             *  ie. follow this format on container div -> id="small_height_[x]"
             */
            $this.data('openHeight', $this.attr('id').split('_')[2]);

        });

        /*!
         *  bind events to chart triggers
         */
        interactiveCharts.find('div#IVP_29_trigger input').on('click', function(e) {
            e.preventDefault();
            var $this = jQuery(this).closest('.interactive_population');
            
            /*!
             *  toggle open and closed
             */
            if ($this.data('isOpen') === true) {
                
                $this.data('isOpen', false);
                $this.stop().animate({ height: $this.data('closedHeight') + 'px' }, 600);
                
                $this.find('#chart_open_button').css('display', 'inline');
                $this.find('#chart_close_button').css('display', 'none');

            } else if ($this.data('isOpen') === false) {
                
                $this.data('isOpen', true);
                $this.stop().animate({ height: $this.data('openHeight') + 'px' }, 600);
            
                $this.find('#chart_open_button').css('display', 'none');
                $this.find('#chart_close_button').css('display', 'inline');

            }
        });

    }